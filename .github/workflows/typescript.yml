name: TypeScript Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: API Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: 'yarn'
          cache-dependency-path: './exercises/TypeScript/yarn.lock'
      - run: yarn install
        working-directory: './exercises/TypeScript'
      - run: yarn build
        working-directory: './exercises/TypeScript'

  lint:
    name: API Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: 'yarn'
          cache-dependency-path: './exercises/TypeScript/yarn.lock'
      - run: yarn install
        working-directory: './exercises/TypeScript'
      - run: yarn build
        working-directory: './exercises/TypeScript'
      - run: yarn lint
        working-directory: './exercises/TypeScript'

  test:
    name: API Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: 'yarn'
          cache-dependency-path: './exercises/TypeScript/yarn.lock'
      - run: yarn install
        working-directory: './exercises/TypeScript'
      - run: yarn build
        working-directory: './exercises/TypeScript'
      - uses: falti/dotenv-action@v1.1.2
        with: 
          path: './exercises/TypeScript/.env'
      - run: yarn db:test
        working-directory: './exercises/TypeScript'
      - run: yarn test:cov
        working-directory: './exercises/TypeScript'
